diff --git a/fs/dyn_sync_cntrl.c b/fs/dyn_sync_cntrl.c
index d2f0ae0..03ecd5e 100644
--- a/fs/dyn_sync_cntrl.c
+++ b/fs/dyn_sync_cntrl.c
@@ -1,6 +1,7 @@
 /*
  * Author: Paul Reioux aka Faux123 <reioux@gmail.com>
  *
+ * Copyright 2013 Paul Reioux
  * Copyright 2012 Paul Reioux
  *
  * This software is licensed under the terms of the GNU General Public
@@ -22,22 +23,26 @@
 
 #include <linux/writeback.h>
 
-#define DYN_FSYNC_VERSION 1
+#define DYN_FSYNC_VERSION_MAJOR 1
+#define DYN_FSYNC_VERSION_MINOR 1
 
 /*
- * fsync_mutex protects dyn_fsync_active during early suspend / lat resume transitions
+ * fsync_mutex protects dyn_fsync_active during early suspend / late resume
+ * transitions
  */
 static DEFINE_MUTEX(fsync_mutex);
 
-bool early_suspend_active = false;
-bool dyn_fsync_active = true;
+bool early_suspend_active __read_mostly = false;
+bool dyn_fsync_active __read_mostly = true;
 
-static ssize_t dyn_fsync_active_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+static ssize_t dyn_fsync_active_show(struct kobject *kobj,
+		struct kobj_attribute *attr, char *buf)
 {
 	return sprintf(buf, "%u\n", (dyn_fsync_active ? 1 : 0));
 }
 
-static ssize_t dyn_fsync_active_store(struct kobject *kobj, struct kobj_attribute *attr, const char *buf, size_t count)
+static ssize_t dyn_fsync_active_store(struct kobject *kobj,
+		struct kobj_attribute *attr, const char *buf, size_t count)
 {
 	unsigned int data;
 
@@ -58,24 +63,30 @@ static ssize_t dyn_fsync_active_store(struct kobject *kobj, struct kobj_attribut
 	return count;
 }
 
-static ssize_t dyn_fsync_version_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+static ssize_t dyn_fsync_version_show(struct kobject *kobj,
+		struct kobj_attribute *attr, char *buf)
 {
-	return sprintf(buf, "version: %u\n", DYN_FSYNC_VERSION);
+	return sprintf(buf, "version: %u.%u by faux123\n",
+		DYN_FSYNC_VERSION_MAJOR,
+		DYN_FSYNC_VERSION_MINOR);
 }
 
-static ssize_t dyn_fsync_earlysuspend_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+static ssize_t dyn_fsync_earlysuspend_show(struct kobject *kobj,
+		struct kobj_attribute *attr, char *buf)
 {
 	return sprintf(buf, "early suspend active: %u\n", early_suspend_active);
 }
 
 static struct kobj_attribute dyn_fsync_active_attribute = 
-	__ATTR(Dyn_fsync_active, 0666, dyn_fsync_active_show, dyn_fsync_active_store);
+	__ATTR(Dyn_fsync_active, 0666,
+		dyn_fsync_active_show,
+		dyn_fsync_active_store);
 
 static struct kobj_attribute dyn_fsync_version_attribute = 
-	__ATTR(Dyn_fsync_version, 0444 , dyn_fsync_version_show, NULL);
+	__ATTR(Dyn_fsync_version, 0444, dyn_fsync_version_show, NULL);
 
 static struct kobj_attribute dyn_fsync_earlysuspend_attribute = 
-	__ATTR(Dyn_fsync_earlysuspend, 0444 , dyn_fsync_earlysuspend_show, NULL);
+	__ATTR(Dyn_fsync_earlysuspend, 0444, dyn_fsync_earlysuspend_show, NULL);
 
 static struct attribute *dyn_fsync_active_attrs[] =
 	{
@@ -133,7 +144,8 @@ static int dyn_fsync_init(void)
 		return -ENOMEM;
         }
 
-	sysfs_result = sysfs_create_group(dyn_fsync_kobj, &dyn_fsync_active_attr_group);
+	sysfs_result = sysfs_create_group(dyn_fsync_kobj,
+			&dyn_fsync_active_attr_group);
 
         if (sysfs_result) {
 		pr_info("%s dyn_fsync sysfs create failed!\n", __FUNCTION__);
@@ -152,4 +164,3 @@ static void dyn_fsync_exit(void)
 
 module_init(dyn_fsync_init);
 module_exit(dyn_fsync_exit);
-
diff --git a/fs/sync.c b/fs/sync.c
index 4534064..8e78c9e 100644
--- a/fs/sync.c
+++ b/fs/sync.c
@@ -171,7 +171,7 @@ SYSCALL_DEFINE1(syncfs, int, fd)
 int vfs_fsync_range(struct file *file, loff_t start, loff_t end, int datasync)
 {
 #ifdef CONFIG_DYNAMIC_FSYNC
-	if (dyn_fsync_active && !early_suspend_active)
+	if (unlikely(dyn_fsync_active && !early_suspend_active))
 		return 0;
 	else {
 #endif
@@ -215,7 +215,7 @@ static int do_fsync(unsigned int fd, int datasync)
 SYSCALL_DEFINE1(fsync, unsigned int, fd)
 {
 #ifdef CONFIG_DYNAMIC_FSYNC
-	if (dyn_fsync_active && !early_suspend_active)
+	if (unlikely(dyn_fsync_active && !early_suspend_active))
 		return 0;
 	else
 #endif
@@ -225,7 +225,7 @@ SYSCALL_DEFINE1(fsync, unsigned int, fd)
 SYSCALL_DEFINE1(fdatasync, unsigned int, fd)
 {
 #ifdef CONFIG_DYNAMIC_FSYNC
-	if (dyn_fsync_active && !early_suspend_active)
+	if (unlikely(dyn_fsync_active && !early_suspend_active))
 		return 0;
 	else
 #endif
@@ -300,7 +300,7 @@ SYSCALL_DEFINE(sync_file_range)(int fd, loff_t offset, loff_t nbytes,
 				unsigned int flags)
 {
 #ifdef CONFIG_DYNAMIC_FSYNC
-	if (dyn_fsync_active && !early_suspend_active)
+	if (unlikely(dyn_fsync_active && !early_suspend_active))
 		return 0;
 	else {
 #endif
@@ -404,7 +404,7 @@ SYSCALL_DEFINE(sync_file_range2)(int fd, unsigned int flags,
 				 loff_t offset, loff_t nbytes)
 {
 #ifdef CONFIG_DYNAMIC_FSYNC
-	if (dyn_fsync_active && !early_suspend_active)
+	if (unlikely(dyn_fsync_active && !early_suspend_active))
 		return 0;
 	else
 #endif

